var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _viewJs = require('./view.js');
var _viewJsDefault = _parcelHelpers.interopDefault(_viewJs);
var _urlImgIconsSvg = require('url:../../img/icons.svg');
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
class PaginationView extends _viewJsDefault.default {
  parentElement = document.querySelector('.pagination');
  addHandlerClick(handler) {
    this.parentElement.addEventListener('click', function (e) {
      const btn = e.target.closest('.btn--inline');
    });
  }
  generateMarkup() {
    const currPage = this.data.page;
    const numPages = Math.ceil(this.data.result.length / this.data.resultPage);
    if (currPage === 1 && numPages > 1) {
      return `
      <button class="btn--inline pagination__btn--next">
            <span>page ${currPage + 1}</span>
            <svg class="search__icon">
              <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-right"></use>
            </svg>
        </button>
      `;
    }
    if (currPage < numPages) {
      return `
        <button class="btn--inline pagination__btn--prev">
        <svg class="search__icon">
          <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-left"></use>
        </svg>
        <span>Page ${currPage - 1}</span>
      </button>
      <button class="btn--inline pagination__btn--next">
            <span>page ${currPage + 1}</span>
            <svg class="search__icon">
              <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-right"></use>
            </svg>
        </button>
      `;
    }
    if (currPage === numPages && numPages > 1) {
      return `
      <button class="btn--inline pagination__btn--prev">
      <svg class="search__icon">
        <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-left"></use>
      </svg>
      <span>Page ${currPage - 1}</span>
    </button>`;
    }
    return ' only 1 page';
  }
}
exports.default = new PaginationView();
