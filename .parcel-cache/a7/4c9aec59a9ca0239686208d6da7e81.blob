var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _urlImgIconsSvg = require('url:../../img/icons.svg');
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
class view {
  data;
  render(data) {
    if (!data || Array.isArray(data) && data.length === 0) return this.renderError();
    this.data = data;
    const markup = this.generateMarkup();
    this.clear();
    this.parentElement.insertAdjacentHTML('afterbegin', markup);
  }
  update(data) {
    if (!data || Array.isArray(data) && data.length === 0) return this.renderError();
    this.data = data;
    const newMarkup = this.generateMarkup();
    const newDom = document.createRange().createContextualFragment(newMarkup);
    const newEl = newDom.querySelectorAll('*');
    console.log(newEl);
  }
  clear() {
    this.parentElement.innerHTML = '';
  }
  renderSpinner = function () {
    const markup = `
     <div class="spinner">
     <svg>
       <use href="${_urlImgIconsSvgDefault.default}#icon-loader"></use>
     </svg>
     </div>
     `;
    this.clear();
    this.parentElement.insertAdjacentHTML('afterbegin', markup);
  };
  renderError(message = this.errorMessage) {
    const markup = `
    <div class="error">
            <div>
              <svg>
                <use href="${_urlImgIconsSvgDefault.default}#icon-alert-triangle"></use>
              </svg>
            </div>
            <p>${message}</p>
          </div>
    `;
    this.clear();
    this.parentElement.insertAdjacentHTML('afterbegin', markup);
  }
}
exports.default = view;
