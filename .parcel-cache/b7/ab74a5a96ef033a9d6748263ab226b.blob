var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _urlImgIconsSvg = require('url:../../img/icons.svg');
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
class view {
  data;
  render(data, render = true) {
    if (!data || Array.isArray(data) && data.length === 0) return this.renderError();
    this.data = data;
    const markup = this.generateMarkup();
    if (!render) return markup;
    this.clear();
    this.parentElement.insertAdjacentHTML('afterbegin', markup);
  }
  update(data) {
    this.data = data;
    const newMarkup = this.generateMarkup();
    const newDom = document.createRange().createContextualFragment(newMarkup);
    const newEl = Array.from(newDom.querySelectorAll('*'));
    const curEl = Array.from(this.parentElement.querySelectorAll('*'));
    newEl.forEach((newE, i) => {
      const curE = curEl[i];
      if (!newE.isEqualNode(curE) && newE.firstChild?.nodeValue?.trim?.() !== '') {
        curE.textContent = newE.textContent;
      }
      if (!newE.isEqualNode(curE)) {
        Array.from(newE.attributes).forEach(attr => curE.setAttribute(attr.name, attr.value));
      }
    });
  }
  clear() {
    this.parentElement.innerHTML = '';
  }
  renderSpinner = function () {
    const markup = `
     <div class="spinner">
     <svg>
       <use href="${_urlImgIconsSvgDefault.default}#icon-loader"></use>
     </svg>
     </div>
     `;
    this.clear();
    this.parentElement.insertAdjacentHTML('afterbegin', markup);
  };
  renderError(message = this.errorMessage) {
    const markup = `
    <div class="error">
            <div>
              <svg>
                <use href="${_urlImgIconsSvgDefault.default}#icon-alert-triangle"></use>
              </svg>
            </div>
            <p>${message}</p>
          </div>
    `;
    this.clear();
    this.parentElement.insertAdjacentHTML('afterbegin', markup);
  }
  renderMessage(message = this.message) {
    const markup = `
    <div class="message">
            <div>
              <svg>
                <use href="${_urlImgIconsSvgDefault.default}#icon-alert-triangle"></use>
              </svg>
            </div>
            <p>${message}</p>
          </div>
    `;
    this.clear();
    this.parentElement.insertAdjacentHTML('afterbegin', markup);
  }
}
exports.default = view;
